# -*- coding: utf-8 -*-
"""Exercise_4_Week5_python_pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cUpgY5BVQroDnsPZCNzMsPW2pP9HJOGB

Module Code: B9DA108 | Module Title: Programming for Data Analysis | School: DBS

Lecturer Name: Alexander Victor

Exercise 4: Week5: Python Pandas to be completed by date:Thursday, 17 October 2024, 11:55 PM

Student Name: Sandeep Kumar | Student ID: 20049275 | Email: 20049275@mydbs.ie | Git: https://github.com/sandeepkumar-84/DBS.git

Importing necessary libraries.
"""

import pandas as pd
import numpy as np

"""1. Write a Pandas program to create and display a one-dimensional array-like object containing an array of data using Pandas module.

A function display_1d_array is created which take the list as a parameter and cretes and print a series with values obtained from the list. function is called and users input is passed in the parameter. The user input is any alphanumeric character seperated by space.
"""

def display_1d_array(inputArr):
  print(pd.Series(inputArr))

inputArray = [x for x in input("Enter alphanumerals separated by space: ").split()]

display_1d_array(inputArray)

"""2. Write a Pandas program to convert a Panda module Series to Python list and it's type."""

exSeries = pd.Series([10, 11, 'a', 'b', 'c'])
print("Pandas Example Series and its type")
print(exSeries)
type(exSeries)

print("Convert Pandas Series to Python list & display its type")

exSeriesToList = exSeries.tolist()
print(exSeriesToList)
type(exSeriesToList)

"""3.	Write a Pandas program to add, subtract, multiple and divide two Pandas Series. Sample Series: [2, 4, 6, 8, 10], [1, 3, 5, 7, 9]

"""

series1 = pd.Series([2, 4, 6, 8, 10])
series2 = pd.Series([1, 3, 5, 7, 9])

series_addition = series1 + series2
series_subtraction = series1 - series2
series_multiplication = series1 * series2
series_division = series1 / series2

print("Original Series")
print(series1)
print(series2)

print("After Adding two Series")
print(series_addition)

print("After Subtracting two Series")
print(series_subtraction)

print("After Multiplying two Series")
print(series_multiplication)

print("After Dividing Series1 by Series2")
print(series_division)

"""4.	Write a Pandas program to compare the elements of the two Pandas Series.
Sample Series: [2, 4, 6, 8, 10], [1, 3, 5, 7, 10]

"""

series1 = pd.Series([2, 4, 6, 8, 10])
series2 = pd.Series([1, 3, 5, 7, 10])

print("Comparing two series : ")
series1.compare(series2)

"""5.	Write a Pandas program to convert a NumPy array to a Pandas series."""

exArrayNuPy = np.array([10, 20 , 'a', 'b', 'c'])

print("Numpy Array ")
print(exArrayNuPy)

print("Convert Numpy Array to Pandas Series")

exSeries_Npy_to_Pandas = pd.Series(exArrayNuPy)
print(exSeries_Npy_to_Pandas)

"""6.	Write a Pandas program to change the data type of given a column or a Series."""

esSeries = pd.Series([1,2,3,"11"])

print("Example original Series: ", esSeries, "Type: ", "Type of column 4 is ",type(esSeries[3]))

convertedSer = pd.to_numeric(esSeries)

print("Change the data type to numeric: ", convertedSer)

print("Type of column 4 is converted from string to int",type(convertedSer[3]))

"""7.	Write a Pandas program to convert the first column of a DataFrame as a Series."""

data = {'make': ['Kia', 'Hyundai', 'Honda', 'Nissan'],
'year': [2000, 2001, 2002, 2003],
'model': ['Sonet', 'Sonata','Civic','Ultima']}
frame = pd.DataFrame(data)
print("Original Data Frame looks like")
print(frame)


serCol1 = frame['make']

print("displaying make column as a Series:")
print(serCol1)
print(type(serCol1))

"""8.	Write a Pandas program to convert a dictionary to a Pandas series."""

data = {'k': 'kia', 'h': 'hyundia', 'ho':'honda'}

converted_series = pd.Series(data)

print("Converted series")
converted_series

"""9.	Write a Pandas program to add some data to an existing Series."""

series1 = pd.Series([2, 4, 6, 8, 10])

print("Original Series")
print(series1)

#Adding a new element with value 11 at the last index + 1 of the series.
series1[series1.last_valid_index() + 1] = 11

print(series1)

"""10.	Write a Pandas program to create a subset of a given series based on value and condition."""

exSeries = pd.Series([10, 11, 12,13,14,15,16,19,20,24,25,27])
print("Original Series",exSeries)

slicedSeries = exSeries[(exSeries > 10) & (exSeries < 24)]
print("Sliced Series where value is greater than 10 and less than 24")
print(slicedSeries)

"""11.	Write a Pandas program to create a dataframe from a dictionary and display it. Sample data: {'X':[78,85,96,80,86], 'Y':[84,94,89,83,86],'Z':[86,97,96,72,83]}"""

data = {'make': ['Kia', 'Hyundai', 'Honda', 'Nissan'],
'year': [2000, 2001, 2002, 2003],
'model': ['Sonet', 'Sonata','Civic','Ultima']}
frame = pd.DataFrame(data)
print("Original Data Frame looks like")
print(frame)

"""12.	Write a Pandas program to create and display a DataFrame from a specified dictionary data which has the index labels.
Sample Python dictionary data and list labels:

"""

data = {'make': ['Kia', 'Hyundai', 'Honda', 'Nissan'],
'year': [2000, 2001, 2002, 2003],
'model': ['Sonet', 'Sonata','Civic','Ultima']}

print("Original Data  looks like")
print(data)


labels = ['a', 'b', 'c', 'd']
frame = pd.DataFrame(data, index = labels)


print("Labels  looks like")
print(labels)


print("Data  with index label dictionary looks like")
print(frame)

"""13.	Write a Pandas program to display a summary of the basic information about a specified DataFrame and its data."""

data = {'make': ['Kia', 'Hyundai', 'Honda', 'Nissan'],
'year': [2000, 2001, 2002, 2003],
'model': ['Sonet', 'Sonata','Civic','Ultima']}

print("Original Data  looks like")
print(data)


labels = ['a', 'b', 'c', 'd']
frame = pd.DataFrame(data, index = labels)


print("Labels  looks like")
print(labels)


print("Data info of the frame")
print(frame.info())

"""14.	Write a Pandas program to get the first 3 rows of a given DataFrame.
Sample Python dictionary data and list labels:

"""

data = {'make': ['Kia', 'Hyundai', 'Honda', 'Nissan'],
'year': [2000, 2001, 2002, 2003],
'model': ['Sonet', 'Sonata','Civic','Ultima']}




labels = ['a', 'b', 'c', 'd']
frame = pd.DataFrame(data, index = labels)

print("Original Data  looks like")
print(frame)

print("First three rows")
print(frame[0:3])

"""15.	Write a Pandas program to select the 'name' and 'score' columns from the following DataFrame"""

exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

frame = pd.DataFrame(exam_data , index=labels)
print("Original Data  looks like")
print(frame)

print("Select name and score columns:")
print(frame[['name', 'score']])

"""16.	Write a Pandas program to select the rows where the number of attempts in the examination is greater than 2"""

exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

frame = pd.DataFrame(exam_data , index=labels)
print("Original Data  looks like")
print(frame)

print("number of attempts in the examination is greater than 2 for rows")
print(frame[frame['attempts'] > 2])

"""17.	Write a Pandas program to count the number of rows and columns of a DataFrame."""

exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']


frame = pd.DataFrame(exam_data , index=labels)
print("Original Data  looks like")
print(frame)

print("Number of rows and columns of the DataFrame:")
print(frame.shape)

"""18.	Write a Pandas program to select the rows the score is between 15 and 20 (inclusive)."""

exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}

labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']


frame = pd.DataFrame(exam_data , index=labels)
print("Original Data  looks like")
print(frame)

print("Rows where score between 15 and 20:")
print(frame[frame['score'].between(15, 20)])

"""19.	Write a Pandas program to select the rows where number of attempts in the examination is less than 2 and score greater than 15."""

exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g','h', 'i', 'j']


frame = pd.DataFrame(exam_data , index=labels)
print("Original Data  looks like")
print(frame)

print("Rows where score between 15 and 20:")
print(frame[(frame['attempts'] < 2) & (frame['score'] > 15)])

"""20.	Write a Pandas program to extract items at given positions of a given series.

created a function extract_from_positions to return the nth position elemnt from the array. The positions starts from 1, therefore added a label which starts from 1 and end at the len(inputArray) + 1 position.
"""

def extract_from_positions(series, positions):
    if (positions > len(series)) or (positions < 1):
        raise ValueError("Positions exceeds the length of the series.")
    return series.iloc[positions -1 ]

inputArray = [x for x in input("Enter alphanumerals separated by space: ").split()]

inputPos = int(input("Enter the position to extract item from starting 1,2,3 ..."))

labels = range(1, len(inputArray) + 1)

exSer = pd.Series(inputArray,labels)

print("Inputed Series")
print(exSer)

print("Input position", inputPos)



res = extract_from_positions(exSer,inputPos)


print(f"At position {inputPos} element in the series is {res}" )

"""# End of the assignment"""