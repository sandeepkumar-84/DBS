# -*- coding: utf-8 -*-
"""Exercise_3_Week4_control_flow.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rrAximXoNiQtzC1hfneBRPXJ8ca2isRh

Module Code: B9DA108 | Module Title: Programming for Data Analysis | School: DBS

Lecturer Name: Alexander Victor

Exercise 3: Week4: Control Flow Statements to be completed by date:Thursday, 10 October 2024, 11:58 PM

Student Name: Sandeep Kumar | Student ID: 20049275 | Email: 20049275@mydbs.ie | Git: https://github.com/sandeepkumar-84/DBS.git

1. Write a program to check if a given number is positive, negative, or zero.

Solution: Received following errors
1. '>' not supported between instances of 'str' and 'int' - corrected by converting the inout into integer first
2. name 'Positive' is not defined - corrected by enclosing the words Positive and Negative into double quotes.

The final solution looks like below.
"""

num = int(input("Enter a number: "))
if num > 0:
  print("Positive")
elif num < 0:
  print("Negative")
else:
  print("Zero")

"""2. Write a program to find the maximum of two numbers.

Solution: Received following errors

1. SyntaxError: invalid syntax - provided comma in print command
2. ValueError: invalid literal for int() with base 10: 'Enter first number:  - corrected by adding input command
3. result was coming wrong because "num" was passed as parameter instead of variable num2 in function "maximum(num1,num)"
4. TypeError: '>' not supported between instances of 'int' and 'str - corrected by converting num2 input into int first.

The final solution looks like below.
"""

def maximum(a, b):
  return a if a > b else b
num1 = int(input("Enter first number: "))
num2 = int(input("Enter second number: "))
print("Maximum:", maximum(num1, num2))

"""3. Write a program to check if a given year is a leap year.

Solution: Received following errors

1. TypeError: not all arguments converted during string formatting - corrected by changing year into input parameter and converting into int.
The final solution looks like below.
"""

def is_leap_year(year):
  return (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0)
year = int(input("Enter a year: "))
if is_leap_year(year):
  print("Leap year")
else:
  print("Not a leap year")

"""4. Write a program to print the Fibonacci sequence up to a given number of terms.

Solution: Received following errors

1. SyntaxError: '[' was never closed - corrected by putting ]
2. SyntaxError: expected ':' - corrected by putting : in the for loop statement at the end
3. SyntaxError: invalid syntax. Perhaps you forgot a comma? - corrected by adding ','
4. TypeError: '>' not supported between instances of 'int' and 'str - corrected by converting terms input into int first.

The final solution looks like below.
"""

def fibonacci(n):
  a, b = 0, 1
  fib = [a, b]
  for _ in range(n - 2):
    a, b = b, a + b
    fib.append(b)
  return fib
terms = int(input("Enter the number of terms: "))
print("Fibonacci sequence:", fibonacci(terms))

"""5. Write a program to find the factorial of a given number.

Solution: Received following errors

1. SyntaxError: invalid syntax. Perhaps you forgot a comma? - corrected by adding ','
2. invalid literal for int() with base 10: 'Enter a number: ' - added input command
3. NameError: name 'fact' is not defined - changed the calling function name to defined name "factorial" from "fact"

The final solution looks like below.
"""

def factorial(n):
  if n == 0:
    return 1
  else:
    return n * factorial(n - 1)
num = int(input("Enter a number: "))
print("Factorial:", factorial(num))

"""Write a program to calculate the sum of all numbers from 1 to 100.
Solution: Received following errors

1. total was missing in the print statement  - corrected by adding ',total' in the print statement

The final solution looks like below.
"""

total = sum(range(1, 101))
print("Sum of numbers from 1 to 100:",total)

"""7. Write a program to print the multiplication table of a given number.

Solution: Received following errors

1. NameError: name 'x' is not defined - corrected by relacing x with i
2. replaced the '+' into '*' so that instead of sum, result is multiplication of number with the index 'i'

The final solution looks like below.
"""

num = int(input("Enter a number: "))
for i in range(1, 11):
  print(num, "x", i, "=", num * i)

"""8.
Write a program to find the prime numbers between 1 and 100.

Solution: Received following errors

1. elseif: - it is corrected by using 'elif'
2. added check of i == num -1 so that only when all the numbers between range (2,num) are checked for divisibility, then only number is prime and needs to be added into the list.
3. corrected the range() in 'for i' loop by replacing 'i' with 'num' - inner loop should execute from '2 to num' instead of 'from 2 to i'  

The final solution looks like below.
"""

primes = []
for num in range(2, 101):
  for i in range(2, num):
    if (num % i) == 0:
      break
    elif i == num - 1:
      primes.append(num)


print("Prime numbers between 1 and 100:",primes)

"""Solution: Received following errors
1. name 'x' is not defined - replaced x with numbers

The final solution looks like below

9. Write a program to calculate the average of a list of numbers.
"""

def average(nums):
  return sum(nums) / len(nums)
numbers = [int(x) for x in input("Enter numbers separated by space: ").split()]
print("Average:", average(numbers))

"""10. Write a program to count the number of vowels in each string.

Solution: Received following errors
1. NameError: name 'counts' is not defined - replaced with variable 'count' in the function

2. NameError: name 'counts' is not defined - replaced with function name 'count_vowels' in the statement
3. Added input in front of the "Enter a string:"


The final solution looks like below.
"""

def count_vowels(string):
  vowels = "aeiouAEIOU"
  count = 0
  for char in string:
    if char in vowels:
      count += 1
  return count
text = input(("Enter a string: "))
print("Number of vowels:", count_vowels(text))

"""11. Write a function to calculate the area of a circle given its radius.

Solution: Received following errors

1. NameError: name 'radius' is not defined = replaced with variable 'r'
2. unsupported operand type(s) for ^: 'float' and 'int' - replaced ^ with ** for exponential operator.

The final solution looks like below.
"""

import math
def area_of_circle(radius):
  return math.pi * ( radius ** 2)
r = float(input("Enter the radius of the circle: "))
print("Area of the circle:", area_of_circle(r))

"""12. Write a function to check if a given number is even or odd.

Solution: Received following errors

1. SyntaxError: unmatched ')' - removed extra ')'
2. NameError: name 'number' is not defined - replaced with actual parameter 'num'
3. TypeError: not all arguments converted during string formatting - added int in theinput for conversion.
4. NameError: name 'Even' is not defined - Enclosed them with "

The final solution looks like below.
"""

def is_even(number):
  return number % 2 == 0
num = int(input("Enter a number: "))
if is_even(num):
  print("Even")
else:
  print("Odd")

"""13. Write a function to reverse a given string.

Solution: Received following errors

1. SyntaxError: invalid syntax - definition syntax error - converted to def
2. NameError: name 'string' is not defined - > replaced with 'text' variable

The final solution looks like below.
"""

def reverse_string(string):
  return string[::-1]
text = input("Enter a string: ")
print("Reversed string:", reverse_string(text))

"""14. Write a function to check if a given string is a palindrome

Solution: Received following errors

1. SyntaxError: invalid syntax - changed defn to def
2. SyntaxError: invalid syntax -  used if instead of elif
3. NameError: name 'string' is not defined - enclosed the message in "".
4. NameError: name 'string' is not defined - replaced 'string' to 'text' in parameter passed to function is_palindrome

The final solution looks like below.
"""

def is_palindrome(string):
  return string == string[::-1]
text = input("Enter a string: ")
if is_palindrome(text):
  print("Palindrome")
else:
  print("Not a palindrome")

"""15.Write a function to calculate the square root of a given number.

Solution: Received following errors

1. NameError: name 'floats' is not defined -
2. NameError: name 'number' is not defined - replaced with actual variable name 'num'
3. TypeError: unsupported operand type(s) for ^: 'float' and 'float - replaced ^ with operand ** for exponential (square root in our case)


The final solution looks like below.
"""

def square_root(number):
  return number ** 0.5
num = float(input("Enter a number: "))
print("Square root:", square_root(num))

"""16. Write a function to find the greatest common divisor (GCD) of two numbers.

Solution: Received following errors

1. ValueError: invalid literal for int() with base 10: 'Enter first number: ' - added input in the statement
2. NameError: name 'gcb' is not defined - replaced with actual function name

3. TypeError: unsupported operand type(s) for %: 'int' and 'str' - converted num2 input into int

4. added num1,num2 as parameters to function gcd instead of (num,num)

The final solution looks like below.
"""

def gcd(a, b):
  while b:
    a, b = b, a % b
  return a
num1 = int(input("Enter first number: "))
num2 = int(input("Enter second number: "))
print("GCD:", gcd(num1, num2))

"""17. Write a function to check if a given number is a perfect square.

Solution: Received following errors

1. SyntaxError: invalid syntax -changed from Import to import
2. Changed elif to if
3. Passed num in function is_perfect_square as parameter instead of number
4. changed ^ to ** in function.


The final solution looks like below.
"""

import math
def is_perfect_square(number):
  return math.isqrt(number) ** 2 == number
num = int(input("Enter a number: "))
if is_perfect_square(num):
  print("Perfect square")
else:
  print("Not a perfect square")

"""18.Write a function to generate a list of prime numbers up to a given limit.

Solution: Received following errors

1. SyntaxError: unmatched ')' - added input command and extra '('
2. replaced number with num in append function
3. corrected function name to generate_primes
4. passed limit as parameter
5. added int before input and set in the print statement for unique results
6. else is replaced with elif with condition i == num -1

The final solution looks like below.
"""

def generate_primes(limit):
  primes = []
  for num in range(2, limit + 1):
    for i in range(2, num):
      if (num % i) == 0:
        break
      elif i == num -1:
        primes.append(num)
  return primes
limit = int(input(("Enter a limit: ")))
print("Prime numbers up to", limit, ":", generate_primes(limit))

"""19. Write a function to check if a given string is an anagram of another string.

Solution: Received following errors

1. SyntaxError: invalid syntax - corrected the function keyword to def
2. SyntaxError: invalid syntax - correctd by changing 'elseif' to 'else'
3. NameError: name 'text1' is not defined - changed the 'text' to 'text1'


The final solution looks like below.
"""

def is_anagram(str1, str2):
  return sorted(str1) == sorted(str2)

text1 = input("Enter first string: ")
text2 = input("Enter second string: ")
if is_anagram(text1, text2):
  print("Anagram")
else:
  print("Not an anagram")

"""20.Write a function to calculate the factorial of a given number using recursion.

Solution: Received following errors

1. NameError: name 'number' is not defined - change number to num in the input parameter of the function which is getting called from print function.


The final solution looks like below.
"""

def factorial(n):
  if n == 0:
    return 1
  else:
    return n * factorial(n - 1)
num = int(input("Enter a number: "))
print("Factorial:", factorial(num))

"""# End of the assignment"""